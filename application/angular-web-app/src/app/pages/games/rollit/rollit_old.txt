<div fxLayout="row" fxLayoutGap="30px">

    <div fxFlex="50">

        <div class="card-container">

            <mat-card class="mat-elevation-z8 rollit-upper-card">

                <form [formGroup]="rollItForm">

                    <mat-radio-group aria-label="Select cryptocurrency option">
                        <mat-radio-button *ngFor="let btn of cryptoCurrencyOptions" [value]="btn.cryptoValueIdentifier"
                            [disabled]="btn.isDisabled" [checked]="btn.isChecked">{{btn.displayText}}</mat-radio-button>
                    </mat-radio-group>

                    <div class="bet-container">

                        <div fxLayout="row">
                            <div fxFlex="30">
                                <mat-form-field appearance="fill" color="accent" appearance="standard">
                                    <mat-label>Place your bet</mat-label>
                                    <input matInput type="text" formControlName="betValueControl"
                                        class="bet-input-right-align" />
                                    <div *ngIf="rollItForm.controls['betValueControl'].invalid" class="alert">
                                        <div *ngIf="rollItForm.controls['betValueControl'].errors?.required">
                                            bet is required
                                        </div>
                                        <div *ngIf="rollItForm.controls['betValueControl'].errors?.min">
                                            minimum must be {{vetBetMinValue}}
                                        </div>
                                        <div *ngIf="rollItForm.controls['betValueControl'].errors?.max">
                                            maximum bet is {{vetBetMaxValue}}
                                        </div>
                                        <div *ngIf="rollItForm.controls['betValueControl'].errors?.pattern">
                                            integers only
                                        </div>
                                    </div>
                                </mat-form-field>
                            </div>
                            <div fxFlex="70">
                                <button *ngFor="let btn of vetBetButtons" (click)='onBetBtnClicked($event, btn)'
                                    mat-stroked-button color="primary" class="bet-input-button">{{btn.betText}}</button>
                            </div>
                        </div>

                    </div>

                    <div class="chance-of-winning-container">

                        <div fxLayout="row">
                            <div fxFlex="30">
                                <mat-form-field appearance="fill" color="accent" appearance="standard">
                                    <mat-label>Chance of winning %</mat-label>
                                    <input matInput type="text" formControlName="percentChanceOfWinningControl"
                                        class="bet-input-right-align" />
                                    <div *ngIf="rollItForm.controls['percentChanceOfWinningControl'].invalid"
                                        class="alert">
                                        <div
                                            *ngIf="rollItForm.controls['percentChanceOfWinningControl'].errors?.required">
                                            chance is required
                                        </div>
                                        <div *ngIf="rollItForm.controls['percentChanceOfWinningControl'].errors?.min">
                                            minimum is {{minPercentChanceOfWinning}}
                                        </div>
                                        <div *ngIf="rollItForm.controls['percentChanceOfWinningControl'].errors?.max">
                                            maximum is {{maxPercentChanceOfWinning}}
                                        </div>
                                        <div
                                            *ngIf="rollItForm.controls['percentChanceOfWinningControl'].errors?.pattern">
                                            integers only
                                        </div>
                                    </div>
                                </mat-form-field>
                            </div>

                            <div fxFlex="70">
                                <mat-slider fxFlex class="chance-of-winning-slider" thumbLabel tickInterval="25"
                                    [min]="minPercentChanceOfWinning" [max]="maxPercentChanceOfWinning"
                                    [value]="rollItForm.controls['percentChanceOfWinningControl'].value"
                                    (change)="onPercentChanceSliderChanged($event)">
                                </mat-slider>
                            </div>

                        </div>


                        <div fxLayout="column">

                            <table>
                                <tr>
                                    <td>
                                        Roll Under
                                    </td>
                                    <td>
                                        <mat-form-field style="text-align: center" appearance="standard">
                                            <input matInput type="text" disabled="disabled"
                                                [value]="getRollUnderValue()" disabled="disabled" />
                                        </mat-form-field>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        with a wager of
                                    </td>
                                    <td>
                                        <mat-form-field appearance="fill" color="accent" appearance="standard">
                                            <input matInput type="text" [value]="getSummaryWagerValue()"
                                                disabled="disabled">
                                        </mat-form-field>

                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        for a profit of
                                    </td>
                                    <td>
                                        <mat-form-field appearance="fill" color="accent" appearance="standard">
                                            <input matInput type="text" color="accent" [value]="getSummaryProfitValue()"
                                                disabled="disabled">
                                        </mat-form-field>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        with a commission of
                                    </td>
                                    <td>
                                        <mat-form-field appearance="fill" color="accent" appearance="standard">
                                            <input matInput type="text" color="accent"
                                                [value]="getSummaryCommissionValue()" disabled="disabled">
                                        </mat-form-field>
                                    </td>
                                </tr>
                            </table>

                            <div fxFlexAlign="center">
                                <button mat-flat-button color="accent" (click)="blockChainService.startGame()">
                                    roll it
                                </button>


                                <button mat-flat-button color="accent" (click)="blockChainService.getGame()">
                                    get game data
                                </button>

                            </div>

                        </div>

                    </div>

                </form>

            </mat-card>

        </div>

    </div>

    <div fxFlex="50">

        <mat-tab-group>
            <mat-tab label="recent players" class="rollit-stats-tabs">

                <table mat-table matSort [dataSource]="blockChainService.dataSource" class="rollit-recent-games-table">

                    <!--- Note that these columns can be defined in any order.
                                      The actual rendered columns are set as a property on the row definition" -->

                    <!-- Position Column -->
                    <ng-container matColumnDef="position">
                        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>
                        <td mat-cell *matCellDef="let element"> {{element.position}} </td>
                    </ng-container>

                    <!-- Name Column -->
                    <ng-container matColumnDef="name">
                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>
                        <td mat-cell *matCellDef="let element"> {{element.name}} </td>
                    </ng-container>

                    <!-- Weight Column -->
                    <ng-container matColumnDef="weight">
                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>
                        <td mat-cell *matCellDef="let element"> {{element.weight}} </td>
                    </ng-container>

                    <!-- Symbol Column -->
                    <ng-container matColumnDef="symbol">
                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>
                        <td mat-cell *matCellDef="let element"> {{element.symbol}} </td>
                    </ng-container>

                    <tr mat-header-row *matHeaderRowDef="blockChainService.displayedColumns"></tr>
                    <tr mat-row *matRowDef="let row; columns: blockChainService.displayedColumns;"></tr>
                </table>
                <mat-paginator [pageSizeOptions]="[5, 10]" showFirstLastButtons></mat-paginator>

            </mat-tab>
            <mat-tab label="your history"> Content 2 </mat-tab>
            <mat-tab label="challenges"> Content 3 </mat-tab>
        </mat-tab-group>

    </div>
</div>